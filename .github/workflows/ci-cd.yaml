name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          
      - name: Initialize and Apply Terraform
        run: |
          cd terraform
          terraform init -upgrade
          terraform apply -auto-approve -var-file="variables.tfvars"
          
      - name: Extract Outputs
        id: outputs
        run: |
          cd terraform
          # Store outputs in environment variables for next job
          echo "CLUSTER_NAME=$(terraform output -raw cluster_id)" >> $GITHUB_ENV
          echo "AWS_REGION=$(terraform output -raw aws_region)" >> $GITHUB_ENV
          echo "OIDC_ROLE_ARN=$(terraform output -raw oidc_role_arn)" >> $GITHUB_ENV
          # Other outputs...

  build-and-deploy:
    runs-on: ubuntu-latest

    needs: terraform-apply

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v ./...

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
          kubectl rollout restart deployment ${{ env.DEPLOYMENT_NAME }}